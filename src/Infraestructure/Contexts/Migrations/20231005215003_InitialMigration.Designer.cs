// <auto-generated />
using System;
using GoldenPaths.Infraestructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoldenPaths.Infraestructure.Contexts.Migrations
{
    [DbContext(typeof(GPContext))]
    [Migration("20231005215003_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemandUser", b =>
                {
                    b.Property<int>("DemandsId")
                        .HasColumnType("int");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DemandsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DemandUser");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.Demand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DemandDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DemandStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DemandType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DemandTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemandStatusId");

                    b.HasIndex("DemandTypeId");

                    b.ToTable("Demand");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.DemandStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemandStatus");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.DemandType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemandType");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DemandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("DemandId");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DemandUser", b =>
                {
                    b.HasOne("GoldenPaths.Domain.Entities.Demand", null)
                        .WithMany()
                        .HasForeignKey("DemandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenPaths.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.Demand", b =>
                {
                    b.HasOne("GoldenPaths.Domain.Entities.DemandStatus", null)
                        .WithMany("Demands")
                        .HasForeignKey("DemandStatusId");

                    b.HasOne("GoldenPaths.Domain.Entities.DemandType", null)
                        .WithMany("Demands")
                        .HasForeignKey("DemandTypeId");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.Place", b =>
                {
                    b.HasOne("GoldenPaths.Domain.Entities.Address", "Address")
                        .WithOne("Place")
                        .HasForeignKey("GoldenPaths.Domain.Entities.Place", "AddressId");

                    b.HasOne("GoldenPaths.Domain.Entities.Demand", "Demand")
                        .WithMany()
                        .HasForeignKey("DemandId");

                    b.Navigation("Address");

                    b.Navigation("Demand");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.Address", b =>
                {
                    b.Navigation("Place");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.DemandStatus", b =>
                {
                    b.Navigation("Demands");
                });

            modelBuilder.Entity("GoldenPaths.Domain.Entities.DemandType", b =>
                {
                    b.Navigation("Demands");
                });
#pragma warning restore 612, 618
        }
    }
}
